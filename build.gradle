/*
 * (c) Copyright 2018 Palantir Technologies Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        gradlePluginPortal()
        maven { url  "http://palantir.bintray.com/releases" }
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-info-plugin:5.2.0'
        classpath 'com.gradle.publish:plugin-publish-plugin:0.10.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:14.1.1'
        classpath 'com.palantir.baseline:gradle-baseline-java:2.27.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:1.12.4'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.2'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.1.0'
    }
}


repositories {
    jcenter()
    gradlePluginPortal()
    maven { url  "http://palantir.bintray.com/releases" }
}

apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.source-jar'
apply plugin: 'org.inferred.processors'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply from: "${rootDir}/gradle/bintray-publish.gradle"

group 'com.palantir.graal'
version gitVersion()

dependencies {
    compile localGroovy()
    compile gradleApi()

    testCompile gradleTestKit()
    testCompile 'com.netflix.nebula:nebula-test'
    testCompile 'com.squareup.okhttp3:mockwebserver'

}

gradlePlugin {
    // do not add new task to publish to plugins.gradle.org
    automatedPublishing = false

    plugins {
        graal {
            id = 'com.palantir.graal'
            implementationClass = 'com.palantir.gradle.graal.GradleGraalPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/palantir/gradle-graal'
    vcsUrl = 'https://github.com/palantir/gradle-graal'
    description = 'A plugin for Gradle that adds tasks to download, extract and interact with GraalVM tooling.'
    tags = ['graal', 'native-image']

    plugins {
        graal {
            id = 'com.palantir.graal'
            displayName = 'Palantir Graal Plugin'
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone.errorproneArgs += [
            '-Xep:PreferSafeLoggableExceptions:OFF',
            '-Xep:PreferSafeLoggingPreconditions:OFF',
    ]
}
